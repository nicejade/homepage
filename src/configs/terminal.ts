export default {
  title: '终端工具',
  style: 'stagger',
  list: [
    {
      title: 'iTerm2 | MacOS 首选终端工具',
      link: 'https://iterm2.com/',
      desc: 'iTerm2 是 macOS 上的终端模拟器，广泛用于增强命令行体验。它具有分屏、多标签、自定义键绑定、搜索和回放等功能，便于同时查看和操作多个会话。iTerm2 支持高级粘贴和拖放功能，并能保存和恢复会话状态。其丰富的脚本和插件支持进一步提升了工作效率，成为众多开发者和 IT 专业人士的首选终端工具。',
    },
    {
      title: 'Warp | 一款现代化终端应用',
      link: 'https://www.warp.dev/',
      desc: 'Warp 是一款现代化终端应用，旨在提高开发者生产力。它提供直观的界面和高级功能，如自动补全、命令搜索、块编辑和内置 Git 支持。Warp 强调协作，允许共享命令输出和工作环境，具备高度可定制性，支持多种主题和配置。通过性能优化，Warp 提供快速、响应迅速的使用体验，是提升命令行工作效率和协作能力的理想选择。',
    },
    {
      title: 'Oh My Zsh | 以前所未有的方式释放您的终端',
      link: 'https://ohmyz.sh/',
      desc: 'Oh My Zsh 是一个开源的 Zsh 配置管理框架，由社区驱动开发。它提供了丰富的插件和主题，使用户的终端体验更加便捷和美观。通过简化和优化 Zsh 配置，Oh My Zsh 帮助用户提高工作效率，并支持自动更新。这个框架非常适合开发者，尤其是在命令行界面中频繁操作的用户。'
    },
    {
      title: 'Fish | 智能且用户友好的命令行 Shell',
      link: 'https://fishshell.com/',
      desc: 'Fish 是一个智能且用户友好的命令行 Shell，适用于 Linux、macOS 等操作系统。它开箱即用，提供自动补全和语法高亮等功能，使用户体验更加流畅。Fish 拥有简洁一致的脚本语法，并能根据历史记录和补全建议命令。它支持 24 位真彩色，提供了强大的 web 配置界面，用户可以方便地设置颜色、查看函数和变量。'
    },
    {
      title: 'Git | 开源的分布式版本控制系统',
      link: 'https://git-scm.com/',
      desc: 'Git 是一个开源的分布式版本控制系统，由 Linus Torvalds 开发。它能高效地处理从小型到大型项目的所有版本管理需求。Git 提供了分支和合并功能，使团队协作更加流畅。其快速、灵活和分散式的特点使其成为现代软件开发的标准工具。Git 还支持数据完整性和非线性开发流程，广泛应用于开源项目和企业软件开发。'
    },
    {
      title: 'Vim | 高度可配置的文本编辑器',
      link: 'https://www.vim.org/',
      desc: 'Vim 是一个高度可配置的文本编辑器，由 Bram Moolenaar 开发，适用于高效的文本编辑和程序开发。它支持多种编程语言的语法高亮、自动补全、插件扩展等功能。Vim 具有强大的模式编辑功能，包括命令模式、插入模式、可视模式等，使用户能够快速进行文本操作。其高效的键盘快捷键设计显著提升了编辑速度和生产力。'
    },
    {
      title: 'Homebrew | 一款流行的开源软件包管理器',
      link: 'https://brew.sh/',
      desc: 'Homebrew 是一款流行的开源软件包管理器，专为 macOS 和 Linux 操作系统设计。它允许用户通过命令行快速安装、升级和管理软件包，包括开发工具、应用程序和库。Homebrew 使用简单且灵活，社区支持广泛，用户可以轻松扩展其功能，成为许多开发者和系统管理员的首选工具。'
    },
    {
      title: 'Nvm | 最好用的 Node 版本管理器',
      link: 'https://github.com/nvm-sh/nvm',
      desc: 'Nvm 是开源的 Node.js 版本管理工具，支持在同一台计算机上安装和切换多个 Node.js 版本。它允许开发者根据项目需求选择和管理 Node.js 版本，通过简单的命令行操作实现版本切换和管理全局和项目依赖。它支持跨平台，是 Node.js 开发者常用的工具之一，提升了开发环境的灵活性和效率。'
    },
    {
      title: 'Google ZX | 编写更好脚本的工具',
      link: 'https://github.com/google/zx',
      desc: 'Google ZX 是一个用于编写更佳脚本的工具，由 Google 开发。它基于 Node.js，使得 JavaScript 脚本编写更为便捷。ZX 提供了对 child_process 的有用封装、自动转义参数，并设置了合理的默认值，从而简化了复杂脚本的编写。ZX 适用于希望在命令行脚本中使用 JavaScript 的开发者。'
    },
    {
      title: 'Curl | 在命令行或脚本中传输数据',
      link: 'https://curl.se/',
      desc: 'Curl 是一个用于在命令行中进行数据传输的开源工具，支持多种协议，如 HTTP、HTTPS 和 SMTP。它非常适合发送和接收数据，可以处理复杂的网络操作，包括文件下载、表单提交、API 调用等。Curl 提供了丰富的选项和灵活性，广泛用于开发、测试和自动化脚本。它具有跨平台兼容性，可在各平台运行。'
    },
    {
      title: 'Exa | ‘ls’ 的现代替代品',
      link: 'https://the.exa.website/',
      desc: 'Exa 是一个现代化的命令行工具，用于替代传统的 ls 命令。它提供了丰富的彩色输出、高级文件信息、Git 集成和树状视图，提升了文件浏览和管理的效率。Exa 支持多种参数，可以显示详细的文件属性和权限信息，使文件管理更加直观和方便。它设计精美，易于使用，适用于需要更高可读性和功能性的用户。'
    },
    {
      title: 'Bat | ‘cat’ 的现代替代品',
      link: 'https://github.com/sharkdp/bat',
      desc: 'Bat 是一个现代化的命令行工具，用于替代传统的 cat 命令。它增加了语法高亮、分页和 Git 集成等功能，使文件内容查看更加直观和友好。Bat 支持多种语言的语法高亮，自动检测文件类型，并提供上下文分页以便于阅读长文件。此外，Bat 还能显示 Git 修改信息，方便查看文件的版本控制状态。'
    },
  ]
}